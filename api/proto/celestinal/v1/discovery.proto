// Copyright 2025 The Celestinal Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package celestinal.v1;

import "buf/validate/validate.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/celestinals/celestinal/api/gen/go/celestinal/v1;celestinal";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Discovery API";
    version: "1.0";
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  }
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {}
    }
  }
};

service DiscoveryService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/discovery/register",
      body: "*"
    };
  }

  rpc Heartbeat(HeartbeatRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/discovery/heartbeat",
      body: "*"
    };
  }

  rpc Discover(DiscoverRequest) returns (DiscoverResponse) {
    option (google.api.http) = {
      get: "/discovery/discover"
    };
  }
}

message HeartbeatRequest {
  string address = 1 [(buf.validate.field).string.address = true];
}

message RegisterRequest {
  string name = 1 [(buf.validate.field).string.pattern = "^celestinal\\."];
  string address = 2 [(buf.validate.field).string.host_and_port = true];
  google.protobuf.Duration ttl = 3 [(buf.validate.field).duration.gt = {seconds: 0}];
}

message RegisterResponse {
  string id = 1;
  string name = 2 [(buf.validate.field).string.pattern = "^celestinal\\."];
  string address = 3 [(buf.validate.field).string.host_and_port = true];
}

message DiscoverRequest {
  string name = 1 [(buf.validate.field).string.pattern = "^celestinal\\."];
}

message DiscoverResponse {
  string name = 1 [(buf.validate.field).string.pattern = "^celestinal\\."];
  string address = 2 [(buf.validate.field).string.host_and_port = true];
}

// Registrar model
message Registrar {
  string id = 1;
  string name = 2 [(buf.validate.field).string.pattern = "^celestinal\\."];
  string address = 3 [(buf.validate.field).string.host_and_port = true];
  google.protobuf.Duration ttl = 4 [(buf.validate.field).duration.gt = {seconds: 0}];
}

