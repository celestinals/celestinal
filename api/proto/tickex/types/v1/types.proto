// Copyright 2025 The Tickex Authors.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package tickex.types.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/tickexvn/tickex/api/gen/go/types/v1;types";

message Pages {
  int32 index = 1;
  int32 size = 2;
  bool total = 3;
}

message RobotMessageMetadata {
  google.protobuf.Timestamp created_at = 1;
  string author = 2;
}

message RobotMessage {
  RobotMessageMetadata metadata = 1;
  string header = 2;
  string body = 3;
  string footer = 4;
}

message Context {
  // Identifies the user making the request.
  string user_id = 3 [(buf.validate.field).string.min_len = 1];

  // Passes tokens or authentication information through the context.
  string authorization = 4 [(buf.validate.field).string.pattern = "^Bearer[ \t]+([A-Za-z0-9\\-._~+/]+=*)$"];

  // Passes language information for multilingual systems.
  string locale = 5 [(buf.validate.field).string.min_len = 1];

  // Identifies the current service processing the request.
  string service_name = 7 [(buf.validate.field).string.pattern = "^tickex\\..*$"];

  // Identifies the IP address of the client sending the request.
  string ip = 10 [(buf.validate.field).string.pattern = "^([a-zA-Z0-9.-]+)$"];

  // Identifies the environment in which the service is running.
  string environment = 11 [(buf.validate.field).string.pattern = "^(dev|prod|sandbox)$"];
}

message Config {
  string service_registry_address = 1 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9.-]+:[0-9]{1,5}$"];
  string gateway_address = 2 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9.-]+:[0-9]{1,5}$"];
  string env = 3 [(buf.validate.field).string.pattern = "^(dev|prod|sandbox)$"];
  string bot_token = 4;
  int64 chat_id = 5;
}

message Service {
  string id = 1 [(buf.validate.field).string.min_len = 2];
  string name = 2 [(buf.validate.field).string.min_len = 2];
  string host = 3 [(buf.validate.field).string.pattern = "^([a-zA-Z0-9.-]+)$"];
  uint32 port = 4 [(buf.validate.field).uint32.gte = 0];
  repeated string tags = 5;
}

message Flags {
  bool turn_on_bots = 1;
  string name = 2;
  string address = 3 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9.-]+:[0-9]{1,5}$"];
}