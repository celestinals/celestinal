// Copyright 2025 The Tickex Authors.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package tickex.types.v1;

import "buf/validate/validate.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/tickexvn/tickex/api/gen/go/types/v1;types";

message Metadata {
  google.protobuf.StringValue id = 1 [(buf.validate.field).string.min_len = 1];
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.StringValue author = 3;
}

message Context {
  string trace_id = 1 [(buf.validate.field).string.min_len = 1]; // Tracks each request across microservices.
  string request_id = 2 [(buf.validate.field).string.min_len = 1]; // Unique identifier for each request. Useful for debugging and logging.
  string user_id = 3 [(buf.validate.field).string.min_len = 1]; // Identifies the user making the request.
  string authorization = 4; // Passes tokens or authentication information through the context.
  string locale = 5 [(buf.validate.field).string.min_len = 1]; // Passes language information for multilingual systems.
  string correlation_id = 6 [(buf.validate.field).string.min_len = 1]; // Links multiple related requests in a workflow.
  string service_name = 7 [(buf.validate.field).string.min_len = 1]; // Identifies the current service processing the request.
  uint32 retry_count = 8; // Tracks the number of retries to prevent infinite loops.
  string span_id = 9; // Identifies individual parts within a request (tracing).
  string ip = 10 [(buf.validate.field).string.min_len = 1]; // Identifies the IP address of the client sending the request.
  string environment = 11 [(buf.validate.field).string.min_len = 1]; // Identifies the environment in which the service is running.
}

message Config {
  string service_registry_address = 1 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9.-]+:[0-9]{1,5}$"];
  string gateway_address = 2 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9.-]+:[0-9]{1,5}$"];
  string env = 3 [(buf.validate.field).string.pattern = "^(dev|prod|development|production|sandbox)$"];
}

message Service {
  string id = 1 [(buf.validate.field).string.min_len = 2];
  string name = 2 [(buf.validate.field).string.min_len = 2];
  string address = 3 [(buf.validate.field).string.min_len = 2];
  uint32 port = 4 [(buf.validate.field).uint32.gte = 1000];
  repeated string tags = 5;
}
