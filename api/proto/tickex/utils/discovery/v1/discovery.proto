// Copyright 2025 The Tickex Authors.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package tickex.utils.discovery.v1;

import "buf/validate/validate.proto";;

option go_package = "github.com/tickexvn/tickex/api/gen/go/utils/discovery/v1;discovery";

// Define the service registry
service DiscoveryService {
  // Register a new service
  rpc Register(RegisterRequest) returns (RegisterResponse);

  // Discover a service by name
  rpc Discover(DiscoverRequest) returns (DiscoverResponse);

  // Health check to maintain service status
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
}

// Detailed service information
message RegisterRequest {
  string id = 1 [(buf.validate.field).string.min_len = 2];
  string name = 2 [(buf.validate.field).string.min_len = 2];
  string address = 3 [(buf.validate.field).string.min_len = 2];
  uint32 port = 4 ;
  repeated string tags = 5;
  string status_path = 6 [(buf.validate.field).string.min_len = 2];
}

message HeartbeatRequest {
  string name = 1;       // Service name
  string address = 2;    // IP address or hostname
  int32 port = 3;        // Service port
}

// Request to find a service
message DiscoverRequest {
  string name = 1;  // Name of the service to discover
}

// Response from the discovery process
message DiscoverResponse {
  repeated RegisterRequest services = 1;  // List of service instances
}

// Service registration response
message RegisterResponse {
  string message = 1;  // Result message
}

// Heartbeat response
message HeartbeatResponse {
  bool success = 1;  // Heartbeat status
}
